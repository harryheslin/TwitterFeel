{"version":3,"sources":["component/error.js","component/searchbar.js","component/loading.js","component/fetchServer.js","page/homepage.js","component/emoji.js","component/userprofile.js","component/heading.js","component/tweetDiv.js","component/topic.js","component/chart.js","page/analysis.js","component/navbar.js","page/NoMatchPage.js","component/footer.js","App.js","index.js","img/wallpaper.jpg","img/logo.jpg"],"names":["Error","text","Styles","className","styled","div","SearchBar","home","onSubmit","useState","innerValue","setInnerValue","error","setError","HandleSubmit","Row","Col","md","Form","Group","Control","required","size","type","placeholder","name","onChange","x","value","target","test","length","onKeyPress","e","which","Button","variant","id","disabled","onClick","LoadingBar","Spinner","animation","FetchServer","postBody","axios","post","then","res","result","data","HomePage","history","useHistory","loading","setLoading","HandlingSubmit","a","twitterId","usernameError","serverError","push","pathname","state","detail","Jumbotron","fluid","sm","wallpaper","Emoji","sentiment","userprofile","Provider","color","undefined","positive","Math","round","neutral","negative","UserProfile","user","allsentiment","lg","Image","src","img","roundedCircle","screen_name","description","location","Heading","TweetDiv","tweet","Date","date","toLocaleDateString","TopicWordCloud","count","minSize","maxSize","tags","words","colorOptions","luminosity","format","CreateChart","Object","values","forEach","chartData","labels","keys","reverse","datasets","label","backgroundColor","options","responsive","title","display","fontSize","legend","position","scales","xAxes","stacked","scaleLabel","labelString","yAxes","AnalysisPage","match","setData","useLocation","useEffect","interval","setInterval","sessionStorage","getItem","params","account","resp","clearInterval","setItem","tweets","xs","Alert","map","line","key","monthlySentiment","topics","topic","index","NavBar","Navbar","Brand","href","alt","logo","width","height","NoMatchPage","to","Footer","year","getFullYear","App","Fragment","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a5830e03.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Error({ text }) {\r\n    return (\r\n        <Styles>\r\n            <p className=\"alert\">{text}</p>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst Styles = styled.div`\r\npadding:0px;\r\n.alert{\r\n    color:red;\r\n    padding:0px;\r\n}\r\n`","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport Error from '../component/error'\r\n\r\nexport default function SearchBar({ home, onSubmit }) {\r\n    const [innerValue, setInnerValue] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    //handling submit\r\n    const HandleSubmit = () => { onSubmit(innerValue) }\r\n\r\n    //function to handle when user click enter\r\n    const onKeyPress = (e) => {\r\n        //when there is no error\r\n        if (e.which === 13 && !error) {\r\n            HandleSubmit();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Row className={home ? \"home-container\" : \"analysis-container\"}>\r\n                <Col md={8}>\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a Twitter Username ex: BarackObama\"\r\n                            name=\"search\"\r\n                            onChange={(x) => {\r\n                                const { value } = x.target;\r\n                                //check if there is special chars\r\n                                if (/[^\\w]/.test(value)) {\r\n                                    setError(\"There is no special characters in Twitter username. Please enter a correct username.\");\r\n                                } else if (value.length > 15) {\r\n                                    setError(\"Please enter a Twitter username with less than 15 characters length.\");\r\n                                }\r\n                                else {\r\n                                    setError(null)\r\n                                }\r\n                                setInnerValue(value)\r\n                            }}\r\n                            onKeyPress={onKeyPress}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={3} className=\"button-search\">\r\n                    {/* for search button */}\r\n                    <Button\r\n                        className=\"float-right\"\r\n                        size=\"md\"\r\n                        variant=\"info\"\r\n                        id=\"search-button\"\r\n                        //disable button when there is error\r\n                        disabled={error != null}\r\n                        onClick={HandleSubmit}\r\n                    >Search\r\n                    </Button>\r\n                </Col>\r\n                <Col md={11}>\r\n                    {error && <Error text={error} />}\r\n                </Col>\r\n            </Row>\r\n        </Styles>\r\n    )\r\n}\r\n\r\n\r\nconst Styles = styled.div`\r\n.home-container{\r\n    width:55%;\r\n}\r\n.form-control-lg {\r\n    font-size: 0.8rem;\r\n}\r\n@media only screen and (max-width: 568px) {\r\n    .home-container{\r\n        width:100%;\r\n    }\r\n}\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default function LoadingBar({ text }) {\r\n  return (\r\n    <Styles>\r\n      <Spinner animation=\"border\" variant=\"info\" size=\"sm\" />\r\n      <span className=\"loading-text\">  {text}</span>\r\n    </Styles>\r\n  )\r\n}\r\n\r\nconst Styles = styled.div`\r\n.loading-text{\r\n    color:#08545E;\r\n    animation: blink-animation 1.5s steps(5, start) infinite;\r\n    -webkit-animation: blink-animation 1.5s steps(5, start) infinite;\r\n}\r\n\r\n@keyframes blink-animation {\r\n    to {\r\n      visibility: hidden;\r\n    }\r\n  }\r\n  @-webkit-keyframes blink-animation {\r\n    to {\r\n      visibility: hidden;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 568px) {\r\n        background-color:white;\r\n        display:inline-block;\r\n        .loading-text{\r\n            font-size:80%;\r\n        }\r\n  }\r\n`","import axios from \"axios\";\r\n\r\nexport default function FetchServer(value, postBody) {\r\n    return (\r\n        axios.post(`/${value}`, postBody)\r\n            .then(res => {\r\n                const result = res.data;\r\n                return { result }\r\n            })\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Jumbotron, Col } from 'react-bootstrap'\r\nimport SearchBar from '../component/searchbar'\r\nimport LoadingBar from '../component/loading'\r\nimport Error from '../component/error'\r\nimport FetchServer from '../component/fetchServer'\r\nimport styled from 'styled-components'\r\nimport wallpaper from '../img/wallpaper.jpg'\r\n\r\nexport default function HomePage() {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    async function HandlingSubmit(value) {\r\n        try {\r\n            const postBody = { twitterId: '0' }\r\n            const res = await FetchServer(value, postBody);\r\n            if (res.result.usernameError) {\r\n                setError('No username found. Please enter a correct username')\r\n            }\r\n            else if (res.result.serverError) {\r\n                setError('Error Fetching Data from Server')\r\n            }\r\n            else {\r\n                history.push({\r\n                    pathname: `/analysis/${value}`,\r\n                    state: { detail: res.result }\r\n                })\r\n            }\r\n        } catch {\r\n            setError('Error fetching data from server.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Jumbotron fluid className=\"jumbo vertical-center\">\r\n                <Col sm={12} className=\"col-heading\">\r\n                    <h1>How Positive are your Tweets?</h1>\r\n                    <br></br>\r\n                    <h4>Just enter a Twitter username and you will find their tweets information easily.</h4>\r\n                    < SearchBar home={true} onSubmit={async (value) => {\r\n                        setError(false);\r\n                        setLoading(true);\r\n                        HandlingSubmit(value);\r\n                    }} />\r\n                    {error && <Error text={error} />}\r\n                    {(loading && !error) && <LoadingBar text={\"Please wait while we are generating the data\"} />}\r\n                </Col>\r\n            </Jumbotron>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst Styles = styled.div` \r\n    .jumbo{\r\n        background-image: url(${wallpaper});\r\n        background-attachment: fixed;\r\n        background-position: right;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        margin-bottom:0px;\r\n    }\r\n    .vertical-center {\r\n        min-height: 100vh;\r\n        display: flex;\r\n        align-items: top;\r\n    }\r\n    .col-heading{\r\n        margin: 0;\r\n        position: absolute;\r\n        top: 35%;\r\n        padding:3%;\r\n    }\r\n    h1, h4{\r\n        color:#08545E;\r\n        background-color:whitesmoke;\r\n        display:inline-block;\r\n    }\r\n    h4{\r\n        margin-bottom:1.2%;\r\n    }\r\n    h1{\r\n        margin-bottom:2%;\r\n    }\r\n    @media only screen and (max-width: 1366px) {\r\n        h4{\r\n            font-size:120%;\r\n        }\r\n        h1{\r\n            font-size:200%;\r\n        }\r\n    }\r\n    @media only screen and (max-width: 1024px) {\r\n        h4{\r\n            margin-bottom:2%;\r\n        }\r\n        h1{\r\n            margin-bottom:2.5%;\r\n        }\r\n        .col-heading{\r\n            top: 10%;\r\n        }\r\n    }\r\n    @media only screen and (max-width: 568px) {\r\n        .col-heading{\r\n            top: 30%;\r\n        }\r\n        h4{\r\n            margin-bottom:3%;\r\n            font-size:90%;\r\n        }\r\n        h1{\r\n            margin-bottom:3%;\r\n            font-size:120%;\r\n        }\r\n        h1, h4{\r\n            color:#08545E;\r\n            background-color:whitesmoke;\r\n            display:list-item;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Col } from 'react-bootstrap'\r\nimport { IconContext } from \"react-icons\";\r\nimport { RiEmotionLaughFill, RiEmotionNormalFill, RiEmotionUnhappyFill } from 'react-icons/ri';\r\n\r\nexport default function Emoji({ sentiment, userprofile }) {\r\n    return (\r\n        <Styles>\r\n            <IconContext.Provider value={userprofile ? { color: '#ffcc4d', size: '40px' } : { color: '#ffcc4d', size: '28px' }} >\r\n                {(sentiment.positive !== undefined || sentiment === 'positive') && (\r\n                    <Col className=\"div-sentiment\">\r\n                        <RiEmotionLaughFill />\r\n                        {sentiment.positive !== undefined && <span className=\"caption\">{Math.round(sentiment.positive * 100)}%</span>}\r\n                    </Col>\r\n                )}\r\n                {(sentiment.neutral !== undefined || sentiment === 'neutral') && (\r\n                    <Col className=\"div-sentiment\">\r\n                        <RiEmotionNormalFill />\r\n                        {sentiment.neutral !== undefined && <span className=\"caption\">{Math.round(sentiment.neutral * 100)}%</span>}\r\n                    </Col>\r\n                )}\r\n                {(sentiment.negative !== undefined || sentiment === 'negative') && (\r\n                    <Col className=\"div-sentiment\">\r\n                        <RiEmotionUnhappyFill />\r\n                        {sentiment.negative !== undefined && <span className=\"caption\">{Math.round(sentiment.negative * 100)}%</span>}\r\n                    </Col>\r\n                )}\r\n            </IconContext.Provider>\r\n        </Styles >\r\n\r\n    )\r\n}\r\n\r\n\r\nconst Styles = styled.div`\r\n.div-sentiment{\r\n    vertical-align: top;\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 110px;\r\n\r\n}\r\n.caption {\r\n    display: block;\r\n    color:white;\r\n}\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Emoji from './emoji'\r\nimport { Col, Row, Image } from 'react-bootstrap'\r\nimport { MdLocationOn } from 'react-icons/md';\r\n\r\nexport default function UserProfile({ user, allsentiment }) {\r\n    return (\r\n        <Styles>\r\n            {(user && allsentiment) && (\r\n                <Row className=\"user-div container-fluid\">\r\n                    <Col lg={2} className=\"col-img\">\r\n                        <Image src={user.img} roundedCircle className=\"user-img\" />\r\n                    </Col>\r\n                    <Col lg={4} className=\"col-text\">\r\n                        <h4>{user.name}</h4>\r\n                        <p>@{user.screen_name}</p>\r\n                        <p>{user.description}</p>\r\n                        {user.location && <p><MdLocationOn /> {user.location}</p>}\r\n                    </Col>\r\n                    <Col lg={2} className=\"col-sentiment\">\r\n                        <h5>Overall Sentiment:</h5>\r\n                    </Col>\r\n                    <Col lg={4} className=\"col-sentiment\">\r\n                        <Emoji sentiment={allsentiment} userprofile={true} />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Styles >\r\n    )\r\n}\r\n\r\nconst Styles = styled.div`\r\n    margin-top:1%;\r\n    .row{\r\n        margin-right:0px;\r\n        margin-left:0px\r\n    }\r\n    .user-div{\r\n        background-color:#094067;\r\n        padding:2%;\r\n    }\r\n    .col-text{\r\n        color:white;\r\n    }\r\n    .col-img{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    }\r\n    .user-img{\r\n        width:50%\r\n    }\r\n    .col-sentiment{\r\n        color:white;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    }\r\n    p{\r\n        font-size:80%;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        .user-div{\r\n            padding:2%;\r\n        }\r\n        .user-img{\r\n            width:20%\r\n        }\r\n        .col-text{\r\n            text-align:center;\r\n        }\r\n        .col-sentiment{\r\n            text-align:center;\r\n        }\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport SearchBar from './searchbar'\r\nimport FetchServer from './fetchServer'\r\nimport LoadingBar from './loading'\r\nimport Error from '../component/error'\r\n\r\nexport default function Heading() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    async function HandlingSubmit(value) {\r\n        try {\r\n            const postBody = { twitterId: '0' }\r\n            const res = await FetchServer(value, postBody);\r\n            if (res.result.usernameError) {\r\n                setError('No username found. Please enter a correct username')\r\n            }\r\n            else {\r\n                setLoading(false)\r\n                history.push({\r\n                    pathname: `/analysis/${value}`,\r\n                    state: { detail: res.result }\r\n                })\r\n            }\r\n        } catch {\r\n            setError('Error fetching data from server.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Analysis Result</h2>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <SearchBar onSubmit={async (value) => {\r\n                        setError(false);\r\n                        setLoading(true);\r\n                        HandlingSubmit(value);\r\n                    }} />\r\n                    {(loading && !error) && <div className=\"div-loading\"><LoadingBar text={\"loading...\"} /></div>}\r\n                    {error && <div className=\"error-div\"><Error text={error} /></div>}\r\n                </Col>\r\n            </Row>\r\n        </Styles>\r\n    )\r\n}\r\n\r\n\r\nconst Styles = styled.div`\r\n    .row{\r\n        margin-right:0px;\r\n        margin-left:0px\r\n    }\r\n    h2{\r\n        font-color:#094067\r\n    }\r\n    .div-loading{\r\n        padding-left:2.2%;\r\n    }\r\n    .error-div{\r\n        margin-left:2%;\r\n        padding:0%;\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Col, Row, Image } from 'react-bootstrap'\r\nimport Emoji from './emoji'\r\n\r\nexport default function TweetDiv({ user, tweet }) {\r\n    return (\r\n        <Styles>\r\n            {(user && tweet) && (\r\n                <Row className=\"row-tweet\">\r\n                    <Col sm={3} className=\"col-img\">\r\n                        <Image src={user.img} roundedCircle className=\"user-img\" />\r\n                        <span className=\"user-name\">@{user.screen_name}</span>\r\n                        <p>{new Date(tweet.date).toLocaleDateString()}</p>\r\n                    </Col>\r\n                    <Col sm={7}>{tweet.text}</Col>\r\n                    <Col sm={2} className=\"col-emoji\">\r\n                        <Emoji sentiment={tweet.sentiment} userprofile={false} />\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            }\r\n        </Styles >\r\n    )\r\n}\r\n\r\nconst Styles = styled.div`\r\n    .col-img{\r\n        vertical-align: top;\r\n        display: inline-block;\r\n        text-align: left;\r\n    }\r\n    .user-img{\r\n        width:85%;\r\n    }\r\n    .row-tweet{\r\n        background-color:white;\r\n        padding:2%;\r\n        margin:2%;\r\n        border-radius: 20px;\r\n        font-size:70%;\r\n        text-align:justify;\r\n    }\r\n    p{\r\n        font-size:70%;\r\n    }\r\n    .user-name{\r\n        font-size:85%;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        .user-img{\r\n            width:30%;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 586px) {\r\n        .user-img{\r\n            width:15%;\r\n        }\r\n        .col-emoji{\r\n            text-align:right;\r\n        }\r\n    }\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TagCloud } from 'react-tagcloud'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Emoji from './emoji'\r\n\r\n\r\nexport default function TopicWordCloud({ data, count }) {\r\n    const randomColor = {\r\n        luminosity: 'bright',\r\n        format: 'rgb'\r\n    };\r\n\r\n    return (\r\n        data && (\r\n            <Col lg={3} md={4}>\r\n                <Styles>\r\n                    <h5 className=\"topic-title\">Topic {count + 1}</h5>\r\n                    <Row className=\"cloud-word\">\r\n                        <Col sm={2}>Sentiment: </Col>\r\n                        <Col sm={8}><Emoji sentiment={data.sentiment} /></Col>\r\n                        <Col sm={12}>\r\n                            <TagCloud\r\n                                minSize={13}\r\n                                maxSize={25}\r\n                                tags={data.words}\r\n                                colorOptions={randomColor}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Styles >\r\n            </Col >\r\n        )\r\n    )\r\n}\r\n\r\n\r\nconst Styles = styled.div`\r\npadding:3%;\r\n.topic-title{\r\n    background-color:#D07777;\r\n    margin-bottom:0px;\r\n    padding:2%;\r\n    text-align:center;\r\n    color:#F6F6F6;\r\n}\r\n.cloud-word{\r\n    background-color:#F6F6F6;\r\n    height:300px;\r\n    padding:3%;\r\n    margin:0.1%;\r\n}\r\n\r\n`","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport default function CreateChart({ data }) {\r\n    if (data) {\r\n        //Rearrange data for chart\r\n        const positive = []\r\n        const neutral = []\r\n        const negative = []\r\n\r\n\r\n        Object.values(data[0]).forEach(x => {\r\n            positive.push(x.positive);\r\n            neutral.push(x.neutral)\r\n            negative.push(x.negative)\r\n        })\r\n\r\n\r\n        const chartData = {\r\n            labels: Object.keys(data[0]).reverse(),\r\n            datasets: [{\r\n                label: 'Positive',\r\n                data: positive.reverse(),\r\n                backgroundColor: '#ff6386'\r\n            }, {\r\n                label: 'Neutral',\r\n                data: neutral.reverse(),\r\n                backgroundColor: '#4bc0c0'\r\n            }, {\r\n                label: 'Negative',\r\n                data: negative.reverse(),\r\n                backgroundColor: '#ffce56'\r\n            }]\r\n        }\r\n        const barOptions = {\r\n            responsive: true,\r\n            title: {\r\n                display: true,\r\n                text: \"Monthly Tweets Sentiment\",\r\n                fontSize: 20\r\n            },\r\n            legend: {\r\n                position: 'right'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Number of Tweets'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n        return (\r\n            <Bar\r\n                data={chartData}\r\n                options={barOptions}\r\n            />\r\n        )\r\n    } else {\r\n        return (null)\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { Col, Row, Alert } from 'react-bootstrap'\r\nimport { FaTwitter } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport FetchServer from '../component/fetchServer'\r\nimport UserProfile from '../component/userprofile'\r\nimport Heading from '../component/heading'\r\nimport TweetDiv from '../component/tweetDiv'\r\nimport TopicWordCloud from '../component/topic'\r\nimport CreateChart from '../component/chart'\r\nimport Error from '../component/error'\r\n\r\n\r\nexport default function AnalysisPage({ match }) {\r\n    const [data, setData] = useState({});\r\n    const [error, setError] = useState('');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (location.state.detail) {\r\n            setError('')\r\n            setData(location.state.detail);\r\n        }\r\n        //Fetch data from server every 1 minute\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const postBody = { twitterId: sessionStorage.getItem('TwitterID') }\r\n                const resp = await FetchServer(match.params.account, postBody);\r\n                resp.result.serverError && setError('Error Fetching Data from Server');\r\n                if (resp.result && !resp.result.serverError) {\r\n                    setError('')\r\n                    setData(resp.result);\r\n                }\r\n            } catch {\r\n                setError('Unable to connect to the server. Please try again later')\r\n            }\r\n        }, 60000);\r\n\r\n        return () => clearInterval(interval);\r\n\r\n    }, [match.params.account, location.state.detail])\r\n\r\n    //Saving Tweet ID to be sent as a body in the post request.\r\n    useEffect(() => sessionStorage.setItem('TwitterID', data?.tweets && data.tweets[0].id), [data])\r\n\r\n    return (\r\n        <Styles>\r\n            {(data) && (\r\n                <Row className=\"container-analysis\">\r\n                    <Col xs={12}><Heading /></Col>\r\n                    {error && <Col xs={12}> <Alert variant=\"danger\"><Error text={error} /></Alert></Col>}\r\n                    <Col xs={12}>\r\n                        <UserProfile user={data.user} allsentiment={data.allsentiment} />\r\n                    </Col>\r\n                    <Col lg={4} className=\"col-tweets\">\r\n                        <div className=\"div-tweet-heading\"><h5 className=\"title\"><FaTwitter color=\"#3da9fc\" />  Live Tweets</h5></div>\r\n                        <div className=\"overflow-auto div-tweets\">\r\n                            {data.tweets && data.tweets.map((line) =>\r\n                                <TweetDiv user={data.user} tweet={line} key={line.id} />\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={8} className=\"col-chart\">\r\n                        {data.monthlySentiment && <CreateChart data={data.monthlySentiment} />}\r\n                    </Col>\r\n                    <Col sm={12} className=\"wordcloud-heading\">\r\n                        {data.topics && <h3>Top Topics from Latest Tweets  <FaTwitter color=\"#3da9fc\" /></h3>}\r\n                    </Col>\r\n                    <Col lg={12} >\r\n                        <Row>\r\n                            {data.topics?.map((topic, index) => <TopicWordCloud data={topic} count={index} key={topic.title} />)}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Styles >\r\n    )\r\n}\r\n\r\n\r\nconst Styles = styled.div`\r\n    padding:3%;\r\n    .container-analysis{\r\n        padding:0px;\r\n        margin-bottom:7%;\r\n    }\r\n    .col-tweets{\r\n        padding-top:2%;\r\n    }\r\n    .div-tweets{\r\n        padding:3%;\r\n        height:460px;!important\r\n    }\r\n    .overflow-auto{\r\n        background-color:#D8EEFE;!important\r\n    }\r\n    .title{\r\n        text-align:center;\r\n    }\r\n    .wordcloud-heading{\r\n        margin-top:2%;\r\n        padding:2% 1%;\r\n    }\r\n    .col-chart{\r\n        display:flex;\r\n        align-items:flex-end;\r\n        justify-content:center;\r\n    }\r\n\r\n    @media only screen and (min-width: 1450px) {\r\n        padding: 4% 6% 3% 6%;\r\n        .div-tweets{\r\n            height:620px;!important\r\n        }\r\n    }\r\n    \r\n    @media only screen and (max-width: 586px) {\r\n        padding:6%;\r\n        h3{\r\n            font-size: 120%\r\n        }\r\n        h5{\r\n            font-size: 100%;\r\n        }\r\n        .wordcloud-heading{\r\n            text-align:center;\r\n            margin-top:6%;\r\n        }\r\n        .col-tweets{\r\n            margin-top:6%;\r\n        }\r\n        .col-chart{\r\n            margin-top:8%;\r\n        }\r\n    }\r\n  \r\n`","import React from 'react'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport logo from '../img/logo.jpg'\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <Navbar>\r\n            <Navbar.Brand href=\"/\">\r\n                <img\r\n                    alt=\"\"\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"25\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                    TwitterFeel\r\n                    </Navbar.Brand>\r\n        </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { Jumbotron, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport wallpaper from '../img/wallpaper.jpg'\r\n\r\nexport default function NoMatchPage() {\r\n    return (\r\n        <Styles>\r\n            <Jumbotron fluid className=\"jumbo vertical-center\">\r\n                <Col sm={12} className=\"col-text\">\r\n                    <h3>No site found. Please return to our <Link to=\"/\">Home Page </Link></h3>\r\n                </Col>\r\n            </Jumbotron>\r\n        </Styles >\r\n    )\r\n}\r\n\r\nconst Styles = styled.div` \r\n    .jumbo{\r\n        background-image: url(${wallpaper});\r\n        background-attachment: fixed;\r\n        background-position: right;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        margin-bottom:0px;\r\n    }\r\n    .vertical-center {\r\n        min-height: 100vh;\r\n        display: flex;\r\n        align-items: top;\r\n    }\r\n    .col-text{\r\n        margin: 0;\r\n        position: absolute;\r\n        top: 45%;\r\n    }\r\n\r\n\r\n    @media only screen and (max-width: 568px) {\r\n        h3{\r\n            margin-bottom:3%;\r\n            font-size:100%;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { MdCopyright } from \"react-icons/md\";\r\nimport { FaTwitter } from 'react-icons/fa'\r\n\r\nexport default function Footer() {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <Styles>\r\n            <p><MdCopyright color=\"#ffffff\" /> {year} with Data From <FaTwitter color=\"#3da9fc\" /> API </p>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst Styles = styled.div`\r\n    text-align:center;\r\n    color:white;\r\n    background-color: #042330;\r\n    padding:0.5% 0 0.5% 0;\r\n    margin-top:0%;\r\n    p{\r\n        margin-bottom:0px;\r\n    }\r\n\r\n    @media (max-width: 576px) {\r\n        p{\r\n            font-size:80%;\r\n        }\r\n    }\r\n\r\n`","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport HomePage from './page/homepage';\r\nimport AnalysisPage from './page/analysis';\r\nimport Nav from './component/navbar'\r\nimport NoMatchPage from './page/NoMatchPage'\r\nimport Footer from './component/footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage} />\r\n          <Route path=\"/analysis/:account\" exact component={AnalysisPage} />\r\n          <Route path=\"*\" component={NoMatchPage} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/wallpaper.e2de1f95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fb439bf5.jpg\";"],"sourceRoot":""}